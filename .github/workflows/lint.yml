name: Lint

on:
  push:
    branches:
      - main
      - develop
      - 'feat/**'
      - 'fix/**'
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  golangci-lint:
    name: Go Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install golangci-lint v2.5.0
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.5.0
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run golangci-lint
        run: golangci-lint run --timeout=5m

  gofumpt:
    name: Go Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install gofumpt
        run: go install mvdan.cc/gofumpt@latest

      - name: Check formatting
        run: |
          if [ "$(gofumpt -l -extra . | wc -l)" -gt 0 ]; then
            echo "❌ Code is not formatted with gofumpt. Run 'make fmt' to fix."
            gofumpt -l -extra .
            exit 1
          fi
          echo "✅ Code is properly formatted"

  markdownlint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli

      - name: Run markdownlint
        run: markdownlint '**/*.md' --ignore node_modules --ignore build --config .markdownlintrc

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -v -race -short -coverprofile=coverage.out ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Build
        run: make build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: oracle-go
          path: build/oracle-go
          retention-days: 7
